<?xml version="1.0"?>
<launch>

  <arg name="gui" default="true"/>

  <!-- load katana urdf -->
  <include file="$(find kurtana_description)/launch/upload_kurtana.launch" />

  <!-- which joints does this katana instance control? (for teleop etc.) -->
  <rosparam command="load" file="$(find katana)/config/katana_arm_controllers.yaml" />

  <!-- remap katana_gripper_grasp_controller topic names; this has to be stated before loading Gazebo! -->
  <remap from="posture_action_name" to="/gripper_grasp_posture_controller" />
  <remap from="grasp_query_name" to="/gripper_grasp_status" />

  <!-- load world -->
  <!-- start up empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_katana_model" pkg="gazebo_ros" type="spawn_model" args="$(optenv ROBOT_INITIAL_POSE) -z 0.01 -urdf -param robot_description -model katana" respawn="false" output="screen"/>

  <!-- Default Controllers -->
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_arm_controller.yaml" />
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_gripper_controller.yaml" />
  <rosparam command="load" file="$(find kurtana_gazebo)/config/kurtana_pole_controllers.yaml" />

  <!-- Controller manager parameters -->
  <param name="pr2_controller_manager/mechanism_statistics_publish_rate" value="1.0" />
  <param name="pr2_controller_manager/joint_state_publish_rate" value="100.0" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Controllers that come up loaded -->
  <node name="default_loaded_controllers_spawner"
    pkg="pr2_controller_manager" type="spawner" output="screen"
    args="--wait-for=/calibrated katana_arm_controller kurtana_stretch_joint_controller kurtana_roll_joint_controller kurtana_pitch_joint_controller" />

  <!-- Fake calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
    args="pub /calibrated std_msgs/Bool true" />

  <include file="$(find katana_arm_gazebo)/launch/coke_can.launch"/>

  <!-- spawn table -->
  <param name="table_description"
    command="$(find xacro)/xacro.py '$(find katana_arm_gazebo)/urdf/table.urdf.xacro'" />
  <node name="spawn_table" pkg="gazebo_ros" type="spawn_model" args="-urdf -param table_description -model table_1 -x 0.75"
    respawn="false" output="screen" />

  <group ns="katana_arm_controller">
    <node pkg="katana_joint_movement_adapter" type="joint_movement_adapter" name="joint_movement_adapter" output="screen">
      <param name="max_acc" value="1.190799" />
      <param name="max_vel" value="2.646220" />
    </node>
  </group>

  <node name="joint_commander" pkg="kurtana_pole_joint_commander" type="joint_commander">
    <param name="kurtana_stretch_joint" type="double" value="0.42" />
    <param name="kurtana_roll_joint" type="double" value="0.0" />
    <param name="kurtana_pitch_joint" type="double" value="1.1" />
    <param name="publish_joint_states" type="bool" value="False" />
    <param name="publish_controller_commands" type="bool" value="True" />
  </node>
</launch>

